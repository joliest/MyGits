package com.miforum.controllers;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.miforum.components.Account;
import com.miforum.components.Post;
import com.miforum.database.PostDatabase;
import com.miforum.services.PostServices;
import com.miforum.viewresolver.PostView;

public class PostController extends HttpServlet{
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		PrintWriter out = response.getWriter();
		
		final String ADD_POST = "add_post";
		final String DISPLAY_RECENT_POSTS= "display_recent_posts";
		final String DISPLAY_PREVIOUS_POSTS = "display_previous_posts";
		
		HttpSession session = request.getSession();
		Account account = (Account) session.getAttribute("activeAccount");
		
		String functionality = request.getParameter("functionality");
		String id = request.getParameter("post_id");
		String title = request.getParameter("post_title");
		String body = request.getParameter("post_body");
		String username = account.getUsername();
		
		Post post = null;
		PostServices services = null;
		PostDatabase database = null;
		PostView view = null;
		
		if(functionality.equals(ADD_POST)) {
			post = new Post(title, body, username);
			database = new PostDatabase();
			services = new PostServices(post, database);
			
			services.addPost();
		} else if(functionality.equals(DISPLAY_RECENT_POSTS)) {
			
			PostServices displayServices = (PostServices) session.getAttribute("displayServices");
			
			if(displayServices == null) {
				services = new PostServices(database);
				session.setAttribute("displayServices", services);
			} else {
				services = displayServices;
				services.setDatabase(new PostDatabase());
			}
			
			ArrayList<Post> posts = services.getNextSetOfPosts(2);
			
			String output = "";
			
			for(int i = 1; i < posts.size(); i++) {
				post = posts.get(i);
				view= new PostView(post);
				output += view;
			}
			
			out.println(output);

		} else if(functionality.equals(DISPLAY_PREVIOUS_POSTS)) {
			PostServices displayServices = (PostServices) session.getAttribute("displayServices");
			
			if(displayServices == null) {
				services = new PostServices(database);
				session.setAttribute("displayServices", services);
			} else {
				services = displayServices;
				services.setDatabase(new PostDatabase());
			}
			
			ArrayList<Post> posts = services.getPreviousSetOfPosts(2);
			
			String output = "";
			
			for(int i = 1; i < posts.size(); i++) {
				post = posts.get(i);
				view= new PostView(post);
				output += view;
			}
			
			out.println(output);

		}
		
		out.close();
		
	}
}














