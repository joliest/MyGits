package com.tracker.Attribute.web;

import javax.servlet.http.*;

import com.tracker.Module;
import com.tracker.Attribute.model.Attribute;
import com.tracker.Attribute.model.AttributeGroup;
import com.tracker.DatabaseHelper.*;

import javax.servlet.*;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;

public class AttributeServlet extends HttpServlet{
	
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//doGet(request, response);
		response.setContentType("text/html");
		PrintWriter out = response.getWriter();
		
		List htmlTags = new ArrayList();
		
		String category = request.getParameter("category");
		String alert = "";
		
		HashMap<Integer, String> attributeGroupList;
		
		Attribute attribute = new Attribute(request);
		DatabaseManager managerTask = new AttributeDatabaseManager(attribute);
		AttributeDatabaseManager attributeManagerTask = (AttributeDatabaseManager) managerTask;
		AttributeGroup attributeGroup;
		
		if(category.equals("addAttribute")) {	
			
			Attribute addAttribute = new Attribute(request);
			DatabaseManager addTask = new AttributeDatabaseManager(addAttribute);
			
			attribute = new Attribute(request);
			addTask.add();			
			alert +=  addAttribute.getName() + " is added.";
			
		} else if(category.equals("loadAttributesPanel")) {
			
			HashMap<Integer, String> attributeGroups = managerTask.listGroups();
			HashMap<Integer, String> attributes;

			
			for(Map.Entry<Integer, String> groupEntry : attributeGroups.entrySet()) {
				
				String groupId = groupEntry.getKey().toString();
				String groupName = groupEntry.getValue().toString();
				
				int attributeGroupId = groupEntry.getKey();
				attributes = managerTask.getMembersByGroupId(attributeGroupId);
				
				//generates <li groupId="100">GroupName</li>
				alert += "<li groupId=\"" + groupId + "\">";
				alert += groupName;		
				alert += "<ul>";
				for(Map.Entry<Integer, String> entry : attributes.entrySet()) {
					String id = entry.getKey().toString();
					String attributeName = entry.getValue().toString();
					
					//generates <li attributeId="1001">AttributeName</li>
					alert += "<li id=\"attributeListRow\" attributeId=\"" + id + "\">";
					alert += attributeName;
					alert += "</li>";
				}
				alert += "</ul>";
				alert += "</li>";
			}
			
		} else if(category.equals("getAttributeGroup")) {
			
			String attributeIdValue = request.getParameter("attributeId");
			int attributeId = Integer.parseInt(attributeIdValue);
			alert += attributeManagerTask.getAttributeGroupById(attributeId);
			
		} else if(category.equals("getAttributeName")) {
			
			String attributeIdValue = request.getParameter("attributeId");
			int attributeId = Integer.parseInt(attributeIdValue);
			alert += attributeManagerTask.getAttributeNameById(attributeId);
			
		} else if(category.equals("getDataType")) {
			
			String attributeIdValue = request.getParameter("attributeId");
			int attributeId = Integer.parseInt(attributeIdValue);
			alert += attributeManagerTask.getAttributeDataTypeById(attributeId);
			
		} else if(category.equals("getLength")) {
			
			String attributeIdValue = request.getParameter("attributeId");
			int attributeId = Integer.parseInt(attributeIdValue);
			alert += attributeManagerTask.getAttributeLengthById(attributeId);
			
		} else if(category.equals("deleteAttribute")) {
			
			String attributeIdValue = request.getParameter("attributeId");
			int attributeId = Integer.parseInt(attributeIdValue);
			alert += managerTask.remove(attributeId);
			
		}else {
			
		}		
		out.print(alert);
	}
	
}
